[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tsfoundations"
version = "0.1.0"
description = "A Python project with uv, ruff, and cursor configuration"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
keywords = []
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "huggingface-hub>=0.24.0",
    "torch>=2.0.0", # Updated for better compatibility
    "setuptools>=68.0.0", # replaces distutils functionality
    "momentfm>=0.1.4",
    "pandas>=2.1.0",
    "scikit-learn>=1.7.1",
    "matplotlib>=3.10.3",
    "openpyxl>=3.1.5",
    "seaborn>=0.13.2",
    "numpy>=1.25.2",
    "tqdm>=4.67.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = ["sphinx>=7.0.0", "sphinx-rtd-theme>=1.3.0", "myst-parser>=2.0.0"]

# uv configuration
[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "jupyterlab>=4.4.5",
]

# ruff configuration - integrated linter, formatter, sorter
[tool.ruff]
target-version = "py313"
line-length = 88
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
    ".pytest_cache",
    ".mypy_cache",
    "*.egg-info",
    ".vscode",
    ".cursor",
    "docs",
    "*.egg",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "I",   # isort
    "N",   # pep8-naming
    "C4",  # flake8-comprehensions
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
    "RET", # flake8-return
]
extend-ignore = [
    "E501",    # line too long, handled by formatter
    "B008",    # do not perform function calls in argument defaults
    "C901",    # too complex
    "PLR0913", # too many arguments
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "S101",    # Use of assert detected
    "S603",    # subprocess call - check for execution of untrusted input
    "S607",    # Starting a process with a partial executable path
    "N803",    # argument name should be lowercase
    "N806",    # variable in function should be lowercase
    "B904",    # raise without from inside except
    "RET504",  # unnecessary variable assignment before return
    "SIM108",  # use ternary operator
    "UP032",   # use f-string instead of format
]

# ruff formatter configuration
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

# ruff isort configuration
[tool.ruff.isort]
known-first-party = ["tsfoundations"]
force-single-line = false
combine-as-imports = true
force-wrap-aliases = true
lines-after-imports = 2

# mypy configuration
[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=tsfoundations",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
